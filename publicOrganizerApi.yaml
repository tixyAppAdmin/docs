openapi: 3.0.1
info:
  title: TIXY Public Organizer API
  version: 1.0.0
  description: >
    The TIXY Public Organizer API allows public users to access event and tour data. 
    It includes endpoints to fetch event and tour details based on status or specific identifiers.
servers:
  - url: https://public-api.tixyapp.com

paths:
  /events/{status}:
    get:
      summary: Retrieve public events by status
      description: >
        Fetches a list of public events filtered by the specified status. 
        Allows users to view events that are currently published, past due, or all available events.
      parameters:
        - name: status
          in: path
          required: true
          schema:
            type: string
            enum:
              - all
              - published
              - pastdue
          description: >
            The status of the events to retrieve. Valid values are:
            - `all`: Retrieve all events.
            - `published`: Retrieve currently published events.
            - `pastdue`: Retrieve past due events.
      responses:
        '200':
          description: >
            Successful response containing a list of events filtered by the specified status.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PublicEvent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /event/{id}:
    get:
      summary: Retrieve details for a specific public event
      description: >
        Fetches the details for a specific public event identified by its unique identifier or slug.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: >
            The unique identifier or slug of the event to retrieve.
      responses:
        '200':
          description: >
            Successful response containing the details of the specified event.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicEvent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tours/{status}:
    get:
      summary: Retrieve public tours by status
      description: >
        Fetches a list of public tours filtered by the specified status. 
        Allows users to view tours that are currently published, past due, or all available tours.
      parameters:
        - name: status
          in: path
          required: true
          schema:
            type: string
            enum:
              - all
              - published
              - pastdue
          description: >
            The status of the tours to retrieve. Valid values are:
            - `all`: Retrieve all tours.
            - `published`: Retrieve currently published tours.
            - `pastdue`: Retrieve past due tours.
      responses:
        '200':
          description: >
            Successful response containing a list of tours filtered by the specified status.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PublicTour'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tour/{id}:
    get:
      summary: Retrieve details for a specific public tour
      description: >
        Fetches the details for a specific public tour identified by its unique identifier or slug.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: >
            The unique identifier or slug of the tour to retrieve.
      responses:
        '200':
          description: >
            Successful response containing the details of the specified tour.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicTour'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    PublicEvent:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the event.
        name:
          type: string
          description: Name of the event.
        date:
          type: string
          format: date-time
          description: Date and time of the event.
        location:
          type: string
          description: Venue or location of the event.
        description:
          type: string
          description: A short description of the event.
        status:
          type: string
          description: Current status of the event (e.g., published, pastdue).
    PublicTour:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the tour.
        name:
          type: string
          description: Name of the tour.
        events:
          type: array
          description: List of events included in the tour.
          items:
            $ref: '#/components/schemas/PublicEvent'
        description:
          type: string
          description: A short description of the tour.
        status:
          type: string
          description: Current status of the tour (e.g., published, pastdue).

  responses:
    BadRequest:
      description: >
        Bad Request. The provided parameters are invalid or malformed.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: Explanation of the error.
              code:
                type: string
                description: Error code.
    NotFound:
      description: >
        Not Found. The requested resource was not found.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: Explanation of the error.
              code:
                type: string
                description: Error code.
    InternalServerError:
      description: >
        Internal Server Error. An unexpected error occurred.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: Explanation of the server error.
              code:
                type: string
                description: Error code.